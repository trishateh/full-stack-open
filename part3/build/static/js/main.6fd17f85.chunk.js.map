{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Person.js","components/Persons.js","services/personService.js","App.js","index.js"],"names":["PersonForm","newName","newNumber","handleNewName","handleNewNumber","onSubmit","value","onChange","type","Filter","Person","name","number","Persons","persons","newFilter","deletePerson","filter","person","toLowerCase","includes","map","id","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","message","setMessage","useEffect","personService","initialPersons","Notification","className","event","target","preventDefault","duplicate","find","alert","returnedPerson","concat","setTimeout","window","confirm","catch","error","parseInt","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fd17f85.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({newName, newNumber, handleNewName, handleNewNumber,onSubmit}) =>\n<form onSubmit={onSubmit} >\n    <div>\n        Name: <input value={newName} onChange={handleNewName} />\n    </div>\n    <div>\n        Number: <input value={newNumber} onChange={handleNewNumber} />\n    </div>\n    <button type=\"submit\">add</button>        \n</form>\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({value, onChange}) =>\n<div>\n    Filter shown with <input value={value} onChange={onChange} />\n</div>\n\nexport default Filter","import React from 'react'\n\nconst Person = ({name, number}) => {\n    return(\n        <span>\n            {name} {number} \n        </span>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, newFilter, deletePerson}) => {\n  return(\n    persons.filter(person =>\n        person.name.toLowerCase().includes(newFilter.toLowerCase())).map(person =>\n    <div key= {person.id} >\n        <Person\n            name={person.name} \n            number={person.number} \n        />  \n        \n        <button type=\"button\" value={person.id} onClick={deletePerson} >delete</button>\n    </div>\n  ))}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n    \n}\n\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport './index.css'\n\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const Notification = ({message}) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n  const duplicate = persons.find(person => person.name === newName)\n  if ( duplicate  && duplicate.number !== newNumber) { \n    personService\n      .update(duplicate.id, {name: duplicate.name, number: newNumber})\n      .then(returnedPerson => {\n        if (window.confirm(`${returnedPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n          setPersons(persons.map(person => \n            person.id !== duplicate.id ? person : returnedPerson\n            ))\n        }\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${returnedPerson.name}'s number has been changed`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage(`Information of ${duplicate.name} has already been removed from server`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      return\n  } else if (duplicate) {\n      alert(`${newName} is already added to phonebook`)\n      setNewName('')\n      setNewNumber('')\n      return\n  } \n\n  personService\n      .create({name: newName, number: newNumber})\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${newName}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n    })\n  }\n  \n  const handleNewName = (event) => {\n      setNewName(event.target.value)\n  }\n  \n  const handleNewNumber = (event) => {\n      setNewNumber (event.target.value)\n  }\n  \n  const handleFilter = (event) => {\n    setFilter (event.target.value)\n  }\n\n  const deletePerson = (event) => {\n    event.preventDefault()\n    const id = parseInt(event.target.value)\n    const person = persons.find(p => p.id === id)\n   \n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`Deleted ${person.name}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage(`Information of ${person.name} has already been removed from server`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }     \n    \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter\n        value= {newFilter}\n        onChange= {handleFilter}\n      />  \n      <h3>Add a new</h3>\n      <PersonForm \n        newName={newName} \n        newNumber={newNumber} \n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber} \n        onSubmit={addPerson} \n      />\n      <h3>Numbers</h3>\n      <ul>\n        <Persons persons={persons} newFilter={newFilter} deletePerson = {deletePerson} />\n      </ul>\n      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}